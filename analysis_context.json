{
  "timestamp": "2025-09-23T22:22:42.528969",
  "project_path": "/home/stationery/Chugagpt/chugaGPT",
  "project_name": "chugaGPT",
  "summary": {
    "dependencies_count": 0,
    "issues_count": 22,
    "languages": {
      "JSON": 3,
      "Markdown": 1,
      "Python": 11,
      "Unknown": 4
    },
    "main_modules": 1,
    "security_warnings": 5,
    "test_coverage": 0.0,
    "total_files": 19,
    "total_lines": 3828
  },
  "architecture": {
    "avg_file_size": 20175.36842105263,
    "config_files": [
      "settings.py",
      "settings.json"
    ],
    "languages": {
      "JSON": 3,
      "Markdown": 1,
      "Python": 11,
      "Unknown": 4
    },
    "main_modules": [
      "main.py"
    ],
    "test_files": [],
    "total_files": 19,
    "total_lines": 3828,
    "utils_modules": [
      "utils.py"
    ]
  },
  "issues": {
    "high_complexity_files": [
      "logic.py (complexity: 33)",
      "analysis_context.py (complexity: 17)",
      "gui.py (complexity: 147)",
      "code_writer.py (complexity: 42)",
      "utils.py (complexity: 22)",
      "completion.py (complexity: 57)",
      "scanner.py (complexity: 159)",
      "main.py (complexity: 59)"
    ],
    "large_files": [
      "gui.py (1445 lines)",
      "scanner.py (711 lines)"
    ],
    "missing_docstrings": [
      "settings.py (0.0% functions documented)",
      "code_writer_dialog.py (20.0% functions documented)",
      "history.py (0.0% functions documented)",
      "utils.py (40.0% functions documented)",
      "main.py (36.4% functions documented)"
    ],
    "potential_bugs": [],
    "unused_imports": [
      "logic.py: clean_output",
      "code_writer_dialog.py: QMessageBox",
      "gui.py: QGroupBox, QFrame, OllamaTypingWorker...",
      "code_writer.py: Path",
      "completion.py: Dict, Optional, Tuple...",
      "scanner.py: Progress",
      "main.py: QMenuBar, QMenu, load_history"
    ]
  },
  "suggestions": {
    "architecture": [
      "Add unit tests to improve code reliability"
    ],
    "code_quality": [
      "Refactor high-complexity functions into smaller, more focused functions",
      "Add docstrings to all public functions and classes",
      "Remove unused imports to clean up the codebase"
    ],
    "maintainability": [],
    "performance": [],
    "security": []
  },
  "file_feedback": {
    ".gitignore": "**.gitignore**\n- Type: Unknown\n- Size: 1364 bytes\n",
    "LICENSE": "**LICENSE**\n- Type: Unknown\n- Size: 1071 bytes\n",
    "README.md": "**README.md**\n- Type: Markdown\n- Size: 11453 bytes\n",
    "analysis_context.json": "**analysis_context.json**\n- Type: JSON\n- Size: 8157 bytes\n",
    "analysis_context.py": "**analysis_context.py**\n- Type: Python\n- Size: 6844 bytes\n- Lines of code: 150\n- Classes: 1\n- Functions: 10\n- ⚠️ High complexity - consider refactoring\n",
    "chugGPTScreenShoot1.png": "**chugGPTScreenShoot1.png**\n- Type: Unknown\n- Size: 56776 bytes\n",
    "chugGPTScreenShoot2.png": "**chugGPTScreenShoot2.png**\n- Type: Unknown\n- Size: 134217 bytes\n",
    "code_writer.py": "**code_writer.py**\n- Type: Python\n- Size: 6360 bytes\n- Lines of code: 162\n- Classes: 1\n- Functions: 6\n- ⚠️ High complexity - consider refactoring\n- ⚠️ Potential unused imports: 1\n",
    "code_writer_dialog.py": "**code_writer_dialog.py**\n- Type: Python\n- Size: 5030 bytes\n- Lines of code: 132\n- Classes: 1\n- Functions: 5\n- ⚠️ Low docstring coverage (20.0%)\n- ⚠️ Potential unused imports: 1\n",
    "completion.py": "**completion.py**\n- Type: Python\n- Size: 13791 bytes\n- Lines of code: 365\n- Classes: 4\n- Functions: 23\n- ⚠️ High complexity - consider refactoring\n- ⚠️ Potential unused imports: 4\n",
    "gui.py": "**gui.py**\n- Type: Python\n- Size: 56442 bytes\n- Lines of code: 1445\n- Classes: 6\n- Functions: 57\n- ⚠️ High complexity - consider refactoring\n- ⚠️ Potential unused imports: 6\n",
    "history.json": "**history.json**\n- Type: JSON\n- Size: 14332 bytes\n",
    "history.py": "**history.py**\n- Type: Python\n- Size: 620 bytes\n- Lines of code: 27\n- Functions: 2\n- ⚠️ Low docstring coverage (0.0%)\n",
    "logic.py": "**logic.py**\n- Type: Python\n- Size: 8645 bytes\n- Lines of code: 212\n- Classes: 2\n- Functions: 8\n- ⚠️ High complexity - consider refactoring\n- ⚠️ Potential unused imports: 1\n",
    "main.py": "**main.py**\n- Type: Python\n- Size: 22083 bytes\n- Lines of code: 497\n- Classes: 2\n- Functions: 22\n- ⚠️ High complexity - consider refactoring\n- ⚠️ Low docstring coverage (36.4%)\n- ⚠️ Potential unused imports: 3\n",
    "scanner.py": "**scanner.py**\n- Type: Python\n- Size: 31704 bytes\n- Lines of code: 711\n- Classes: 3\n- Functions: 25\n- ⚠️ High complexity - consider refactoring\n- ⚠️ Potential unused imports: 1\n",
    "settings.json": "**settings.json**\n- Type: JSON\n- Size: 228 bytes\n",
    "settings.py": "**settings.py**\n- Type: Python\n- Size: 552 bytes\n- Lines of code: 23\n- Functions: 2\n- ⚠️ Low docstring coverage (0.0%)\n",
    "utils.py": "**utils.py**\n- Type: Python\n- Size: 3663 bytes\n- Lines of code: 104\n- Classes: 1\n- Functions: 5\n- ⚠️ High complexity - consider refactoring\n- ⚠️ Low docstring coverage (40.0%)\n"
  },
  "key_files": {
    "analysis_context.py": {
      "type": "Python",
      "classes": 1,
      "functions": 10,
      "lines": 150,
      "complexity": 17
    },
    "code_writer.py": {
      "type": "Python",
      "classes": 1,
      "functions": 6,
      "lines": 162,
      "complexity": 42
    },
    "code_writer_dialog.py": {
      "type": "Python",
      "classes": 1,
      "functions": 5,
      "lines": 132,
      "complexity": 6
    },
    "completion.py": {
      "type": "Python",
      "classes": 4,
      "functions": 23,
      "lines": 365,
      "complexity": 57
    },
    "gui.py": {
      "type": "Python",
      "classes": 6,
      "functions": 57,
      "lines": 1445,
      "complexity": 147
    },
    "history.py": {
      "type": "Python",
      "classes": 0,
      "functions": 2,
      "lines": 27,
      "complexity": 4
    },
    "logic.py": {
      "type": "Python",
      "classes": 2,
      "functions": 8,
      "lines": 212,
      "complexity": 33
    },
    "main.py": {
      "type": "Python",
      "classes": 2,
      "functions": 22,
      "lines": 497,
      "complexity": 59
    },
    "scanner.py": {
      "type": "Python",
      "classes": 3,
      "functions": 25,
      "lines": 711,
      "complexity": 159
    },
    "settings.py": {
      "type": "Python",
      "classes": 0,
      "functions": 2,
      "lines": 23,
      "complexity": 2
    },
    "utils.py": {
      "type": "Python",
      "classes": 1,
      "functions": 5,
      "lines": 104,
      "complexity": 22
    }
  },
  "context_prompt": "# Project Analysis Context\n\n## Project: chugaGPT\n- **Location**: /home/stationery/Chugagpt/chugaGPT\n- **Total Files**: 19\n- **Lines of Code**: 3828\n- **Languages**: JSON: 3, Markdown: 1, Python: 11, Unknown: 4\n- **Issues Found**: 22\n\n## Architecture Overview\n- **Main Modules**: main.py\n- **Utility Modules**: utils.py\n\n## Key Issues\n### High Complexity Files\n- logic.py (complexity: 33)\n- analysis_context.py (complexity: 17)\n- gui.py (complexity: 147)\n### Large Files\n- gui.py (1445 lines)\n- scanner.py (711 lines)\n### Missing Docstrings\n- settings.py (0.0% functions documented)\n- code_writer_dialog.py (20.0% functions documented)\n- history.py (0.0% functions documented)\n### Unused Imports\n- logic.py: clean_output\n- code_writer_dialog.py: QMessageBox\n- gui.py: QGroupBox, QFrame, OllamaTypingWorker...\n\n## Available Files\n- **analysis_context.py**: 150 lines, 1 classes, 10 functions\n- **code_writer.py**: 162 lines, 1 classes, 6 functions\n- **code_writer_dialog.py**: 132 lines, 1 classes, 5 functions\n- **completion.py**: 365 lines, 4 classes, 23 functions\n\n## Usage Notes\n- I have analyzed this codebase and can provide insights about its structure, issues, and improvements\n- Ask me about specific files, functions, or architectural decisions\n- I can suggest refactoring approaches or explain complex code sections\n"
}